From f1a89ad732c9207464312159121c30498d6e2893 Mon Sep 17 00:00:00 2001
From: Jiri Slaby <jirislaby@gmail.com>
Date: Fri, 14 Sep 2012 23:45:00 +0200
Subject: [PATCH 2/2] initialize BLAST_NONDET*

sed -i 's@\(int *__BLAST_NONDET[0-9_]*\) *;@\1 = __VERIFIER_nondet_int() ;@' `git grep -l int.*BLAST_NONDET`

Signed-off-by: Jiri Slaby <jirislaby@gmail.com>
---
 ntdrivers/cdaudio.BUG.i.cil.c  | 50 ++++++++++++++++++------------------
 ntdrivers/cdaudio.i.cil.c      | 49 +++++++++++++++++------------------
 ntdrivers/diskperf.BUG.i.cil.c | 49 +++++++++++++++++------------------
 ntdrivers/diskperf.i.cil.c     | 49 +++++++++++++++++------------------
 ntdrivers/floppy.BUG.i.cil.c   | 46 ++++++++++++++++-----------------
 ntdrivers/floppy.i.cil.c       | 46 ++++++++++++++++-----------------
 ntdrivers/floppy2.cil.c        | 46 ++++++++++++++++-----------------
 ntdrivers/kbfiltr.BUG.i.cil.c  | 48 +++++++++++++++++-----------------
 ntdrivers/parport.BUG.i.cil.c  | 58 +++++++++++++++++++++---------------------
 ntdrivers/parport.i.cil.c      | 58 +++++++++++++++++++++---------------------
 10 files changed, 248 insertions(+), 251 deletions(-)

diff --git a/ntdrivers/cdaudio.BUG.i.cil.c b/ntdrivers/cdaudio.BUG.i.cil.c
index a2dd744..9e7057b 100644
--- a/ntdrivers/cdaudio.BUG.i.cil.c
+++ b/ntdrivers/cdaudio.BUG.i.cil.c
@@ -2827,7 +2827,7 @@ extern   NTSTATUS IoOpenDeviceRegistryKey(PDEVICE_OBJECT DeviceObject ,
 #pragma once
 #pragma warning(disable:4200)
 #pragma warning(default:4200)
-int __BLAST_NONDET  ;
+int __BLAST_NONDET ;
 void errorFn(void) 
 { 
 
@@ -7550,7 +7550,7 @@ int main(void)
   NTSTATUS status ;
   IRP irp ;
   int we_should_unload ;
-  int __BLAST_NONDET___0 ;
+  int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
   devobj.DeviceExtension = malloc(sizeof (CD_DEVICE_EXTENSION));
@@ -7702,7 +7702,7 @@ int main(void)
 char _SLAM_alloc_dummy  ;
 extern int ( /* missing proto */  malloc)() ;
 char *nondet_malloc(int i ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7795,7 +7795,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7822,7 +7822,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -7851,7 +7851,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7889,7 +7889,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7922,7 +7922,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7950,7 +7950,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -7980,7 +7980,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8067,7 +8067,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8095,7 +8095,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8126,7 +8126,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8172,7 +8172,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -8288,7 +8288,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8369,7 +8369,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -8414,7 +8414,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -8495,7 +8495,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8526,7 +8526,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -8628,7 +8628,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8650,7 +8650,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8676,7 +8676,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8722,7 +8722,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8777,7 +8777,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8799,7 +8799,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
diff --git a/ntdrivers/cdaudio.i.cil.c b/ntdrivers/cdaudio.i.cil.c
index 9ed6882..02dd756 100644
--- a/ntdrivers/cdaudio.i.cil.c
+++ b/ntdrivers/cdaudio.i.cil.c
@@ -2827,7 +2827,6 @@ extern   NTSTATUS IoOpenDeviceRegistryKey(PDEVICE_OBJECT DeviceObject ,
 #pragma once
 #pragma warning(disable:4200)
 #pragma warning(default:4200)
-int __BLAST_NONDET  ;
 void errorFn(void) 
 { 
 
@@ -7550,7 +7549,7 @@ int main(void)
   NTSTATUS status ;
   IRP irp ;
   int we_should_unload ;
-  int __BLAST_NONDET___0 ;
+  int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
   devobj.DeviceExtension = malloc(sizeof (CD_DEVICE_EXTENSION));
@@ -7706,7 +7705,7 @@ int main(void)
 char _SLAM_alloc_dummy  ;
 extern int ( /* missing proto */  malloc)() ;
 char *nondet_malloc(int i ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7799,7 +7798,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7826,7 +7825,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -7855,7 +7854,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7893,7 +7892,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7926,7 +7925,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -7954,7 +7953,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -7984,7 +7983,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8071,7 +8070,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8099,7 +8098,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8130,7 +8129,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8176,7 +8175,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -8292,7 +8291,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8373,7 +8372,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -8418,7 +8417,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int tmp ;
 
   {
@@ -8499,7 +8498,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8530,7 +8529,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -8632,7 +8631,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8654,7 +8653,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8680,7 +8679,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8726,7 +8725,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8781,7 +8780,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -8803,7 +8802,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
diff --git a/ntdrivers/diskperf.BUG.i.cil.c b/ntdrivers/diskperf.BUG.i.cil.c
index 4072fa0..ab0ff12 100644
--- a/ntdrivers/diskperf.BUG.i.cil.c
+++ b/ntdrivers/diskperf.BUG.i.cil.c
@@ -1974,7 +1974,6 @@ extern NTSTATUS WmiCompleteRequest(PDEVICE_OBJECT DeviceObject , PIRP Irp , NTST
                                    ULONG BufferUsed , CCHAR PriorityBoost ) ;
 NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObject ,
                           PIRP Irp , PSYSCTL_IRP_DISPOSITION IrpDisposition ) ;
-int __BLAST_NONDET  ;
 void errorFn(void) 
 { 
 
@@ -3173,7 +3172,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET___0 ;
+  int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -3339,7 +3338,7 @@ int main(void)
 }
 char _SLAM_alloc_dummy  ;
 char *malloc(int i ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0) {
@@ -3428,7 +3427,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3455,7 +3454,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3484,7 +3483,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3522,7 +3521,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3555,7 +3554,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3583,7 +3582,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3613,7 +3612,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3700,7 +3699,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3728,7 +3727,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3759,7 +3758,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3805,7 +3804,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -3913,7 +3912,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3994,7 +3993,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -4039,7 +4038,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -4120,7 +4119,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4151,7 +4150,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -4253,7 +4252,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4275,7 +4274,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4301,7 +4300,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4347,7 +4346,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4402,7 +4401,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4424,7 +4423,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
diff --git a/ntdrivers/diskperf.i.cil.c b/ntdrivers/diskperf.i.cil.c
index 5a4ce0d..0c98089 100644
--- a/ntdrivers/diskperf.i.cil.c
+++ b/ntdrivers/diskperf.i.cil.c
@@ -1974,7 +1974,6 @@ extern NTSTATUS WmiCompleteRequest(PDEVICE_OBJECT DeviceObject , PIRP Irp , NTST
                                    ULONG BufferUsed , CCHAR PriorityBoost ) ;
 NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObject ,
                           PIRP Irp , PSYSCTL_IRP_DISPOSITION IrpDisposition ) ;
-int __BLAST_NONDET  ;
 void errorFn(void) 
 { 
 
@@ -3173,7 +3172,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET___0 ;
+  int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -3343,7 +3342,7 @@ int main(void)
 }
 char _SLAM_alloc_dummy  ;
 char *malloc(int i ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0) {
@@ -3432,7 +3431,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3459,7 +3458,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3488,7 +3487,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3526,7 +3525,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3559,7 +3558,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3587,7 +3586,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3617,7 +3616,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3704,7 +3703,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3732,7 +3731,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3763,7 +3762,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3809,7 +3808,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -3917,7 +3916,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -3998,7 +3997,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -4043,7 +4042,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -4124,7 +4123,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4155,7 +4154,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -4257,7 +4256,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4279,7 +4278,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4305,7 +4304,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4351,7 +4350,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4406,7 +4405,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
@@ -4428,7 +4427,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET___0 ;
+{ int __BLAST_NONDET___0 = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET___0 == 0) {
diff --git a/ntdrivers/floppy.BUG.i.cil.c b/ntdrivers/floppy.BUG.i.cil.c
index eed6b0e..52bef26 100644
--- a/ntdrivers/floppy.BUG.i.cil.c
+++ b/ntdrivers/floppy.BUG.i.cil.c
@@ -7038,7 +7038,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -7290,7 +7290,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7317,7 +7317,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7346,7 +7346,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7384,7 +7384,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7417,7 +7417,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7445,7 +7445,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7475,7 +7475,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7562,7 +7562,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7590,7 +7590,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7621,7 +7621,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7667,7 +7667,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus1 ;
   PVOID lcontext ;
@@ -7767,7 +7767,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7848,7 +7848,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -7893,7 +7893,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7974,7 +7974,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8005,7 +8005,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -8095,7 +8095,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8117,7 +8117,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8143,7 +8143,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8189,7 +8189,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8244,7 +8244,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8266,7 +8266,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
diff --git a/ntdrivers/floppy.i.cil.c b/ntdrivers/floppy.i.cil.c
index 9202529..7e3f3fc 100644
--- a/ntdrivers/floppy.i.cil.c
+++ b/ntdrivers/floppy.i.cil.c
@@ -7038,7 +7038,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
   d.DriverExtension = malloc(sizeof (struct _DRIVER_EXTENSION));
@@ -7288,7 +7288,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7315,7 +7315,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7344,7 +7344,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7382,7 +7382,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7415,7 +7415,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7443,7 +7443,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7473,7 +7473,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7560,7 +7560,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7588,7 +7588,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7619,7 +7619,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7665,7 +7665,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus1 ;
   PVOID lcontext ;
@@ -7765,7 +7765,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -7846,7 +7846,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -7891,7 +7891,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -7972,7 +7972,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8003,7 +8003,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -8093,7 +8093,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8115,7 +8115,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8141,7 +8141,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8187,7 +8187,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8242,7 +8242,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -8264,7 +8264,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
diff --git a/ntdrivers/floppy2.cil.c b/ntdrivers/floppy2.cil.c
index 2877a2e..37f4301 100644
--- a/ntdrivers/floppy2.cil.c
+++ b/ntdrivers/floppy2.cil.c
@@ -29589,7 +29589,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
   NTSTATUS (*__cil_tmp9)(PDRIVER_OBJECT DriverObject , PUNICODE_STRING RegistryPath ) ;
@@ -29998,7 +29998,7 @@ PLIST_ENTRY ( __attribute__((__fastcall__)) ExfInterlockedRemoveHeadList)(PLIST_
 #line 335 "../slam-kernel.c"
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
   int __cil_tmp8 ;
   void *__cil_tmp9 ;
@@ -30045,7 +30045,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 #line 352 "../slam-kernel.c"
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   void *__cil_tmp4 ;
 
   {
@@ -30085,7 +30085,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
   int __cil_tmp9 ;
   void *__cil_tmp10 ;
@@ -30144,7 +30144,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
   int __cil_tmp12 ;
   void *__cil_tmp13 ;
@@ -30198,7 +30198,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
   int __cil_tmp10 ;
   void *__cil_tmp11 ;
@@ -30240,7 +30240,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
                                                               PUNICODE_STRING DeviceName ) ;
 #line 446 "../slam-kernel.c"
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 455
@@ -30279,7 +30279,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
  __attribute__((__dllimport__)) NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 #line 469 "../slam-kernel.c"
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 477
@@ -30393,7 +30393,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 532
@@ -30427,7 +30427,7 @@ NTSTATUS ( __attribute__((__stdcall__)) IoRegisterDeviceInterface)(PDEVICE_OBJEC
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 549
@@ -30467,7 +30467,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
                                                                    BOOLEAN Enable ) ;
 #line 563 "../slam-kernel.c"
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 572
@@ -30527,7 +30527,7 @@ void stubMoreProcessingRequired(void)
 #line 602 "../slam-kernel.c"
 NTSTATUS ( __attribute__((__fastcall__)) IofCallDriver)(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus1 ;
   PVOID lcontext ;
@@ -30673,7 +30673,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 PLARGE_INTEGER Interval ) ;
 #line 686 "../slam-kernel.c"
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 696
@@ -30779,7 +30779,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
 #line 777 "../slam-kernel.c"
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 788
@@ -30839,7 +30839,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 #line 810 "../slam-kernel.c"
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
   int __cil_tmp5 ;
 
@@ -30947,7 +30947,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
 #line 874 "../slam-kernel.c"
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 887
@@ -30987,7 +30987,7 @@ void ( __attribute__((__fastcall__)) ObfDereferenceObject)(PVOID Object )
                                                       PIRP Irp ) ;
 #line 909 "../slam-kernel.c"
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -31112,7 +31112,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 979
@@ -31140,7 +31140,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
  __attribute__((__dllimport__)) NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 #line 984 "../slam-kernel.c"
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 992
@@ -31172,7 +31172,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS ( __attribute__((__stdcall__)) RtlAnsiStringToUnicodeString)(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 1009
@@ -31230,7 +31230,7 @@ void ( __attribute__((__stdcall__)) RtlCopyUnicodeString)(PUNICODE_STRING Destin
 #line 1038 "../slam-kernel.c"
 NTSTATUS ( __attribute__((__stdcall__)) RtlDeleteRegistryValue)(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 1049
@@ -31300,7 +31300,7 @@ void ( __attribute__((__stdcall__)) RtlInitUnicodeString)(PUNICODE_STRING Destin
 NTSTATUS ( __attribute__((__stdcall__)) RtlQueryRegistryValues)(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 1100
@@ -31328,7 +31328,7 @@ NTSTATUS ( __attribute__((__stdcall__)) RtlQueryRegistryValues)(ULONG RelativeTo
  __attribute__((__dllimport__)) NTSTATUS ( __attribute__((__stdcall__)) ZwClose)(HANDLE Handle ) ;
 #line 1109 "../slam-kernel.c"
 NTSTATUS ( __attribute__((__stdcall__)) ZwClose)(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
 #line 1118
diff --git a/ntdrivers/kbfiltr.BUG.i.cil.c b/ntdrivers/kbfiltr.BUG.i.cil.c
index 527a7ce..4f0c18b 100644
--- a/ntdrivers/kbfiltr.BUG.i.cil.c
+++ b/ntdrivers/kbfiltr.BUG.i.cil.c
@@ -2375,7 +2375,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   PIRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -2552,7 +2552,7 @@ int main(void)
 }
 char _SLAM_alloc_dummy  ;
 char *malloc(int i ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
@@ -2641,7 +2641,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -2668,7 +2668,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -2697,7 +2697,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -2735,7 +2735,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -2768,7 +2768,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -2796,7 +2796,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -2826,7 +2826,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -2913,7 +2913,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -2941,7 +2941,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -2972,7 +2972,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3018,7 +3018,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -3118,7 +3118,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3199,7 +3199,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -3244,7 +3244,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -3325,7 +3325,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3356,7 +3356,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -3446,7 +3446,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3468,7 +3468,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3494,7 +3494,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3540,7 +3540,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3595,7 +3595,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -3617,7 +3617,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
diff --git a/ntdrivers/parport.BUG.i.cil.c b/ntdrivers/parport.BUG.i.cil.c
index b71e2c0..264fe60 100644
--- a/ntdrivers/parport.BUG.i.cil.c
+++ b/ntdrivers/parport.BUG.i.cil.c
@@ -4894,7 +4894,7 @@ NTSTATUS PptDetectChipFilter(PDEVICE_EXTENSION Extension )
 }
 }
 NTSTATUS PptDetectPortType(PDEVICE_EXTENSION Extension ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS Status ;
   UNICODE_STRING ParportPath ;
   RTL_QUERY_REGISTRY_TABLE RegTable[2] ;
@@ -6520,7 +6520,7 @@ NTSTATUS PptPnpAddDevice(PDRIVER_OBJECT pDriverObject , PDEVICE_OBJECT pPhysical
 }
 }
 NTSTATUS PptDispatchPnp(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS status ;
   PIO_STACK_LOCATION irpStack ;
   UCHAR minorFunction ;
@@ -9159,7 +9159,7 @@ NTSTATUS PptInitializeDeviceExtension(PDRIVER_OBJECT DriverObject , PDEVICE_OBJE
 NTSTATUS PptGetPortNumberFromLptName(PWSTR PortName , PULONG PortNumber ) 
 { NTSTATUS status ;
   UNICODE_STRING str ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
@@ -9597,7 +9597,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -9790,7 +9790,7 @@ int main(void)
 }
 char _SLAM_alloc_dummy  ;
 char *malloc(int i ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
@@ -9879,7 +9879,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -9906,7 +9906,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -9935,7 +9935,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -9973,7 +9973,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10006,7 +10006,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10034,7 +10034,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10064,7 +10064,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10151,7 +10151,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10179,7 +10179,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10210,7 +10210,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10256,7 +10256,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -10368,7 +10368,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10449,7 +10449,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -10494,7 +10494,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10575,7 +10575,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10606,7 +10606,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -10708,7 +10708,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10730,7 +10730,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10756,7 +10756,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10802,7 +10802,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10857,7 +10857,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10879,7 +10879,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10901,7 +10901,7 @@ NTSTATUS ZwClose(HANDLE Handle )
 }
 NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObject ,
                           PIRP Irp , PSYSCTL_IRP_DISPOSITION IrpDisposition ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10929,7 +10929,7 @@ NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObje
 NTSTATUS IoAcquireRemoveLockEx(PIO_REMOVE_LOCK RemoveLock ,
                                                                PVOID Tag , PCSTR File ,
                                                                ULONG Line , ULONG RemlockSize ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
diff --git a/ntdrivers/parport.i.cil.c b/ntdrivers/parport.i.cil.c
index e1cc8d1..8ee10f6 100644
--- a/ntdrivers/parport.i.cil.c
+++ b/ntdrivers/parport.i.cil.c
@@ -4894,7 +4894,7 @@ NTSTATUS PptDetectChipFilter(PDEVICE_EXTENSION Extension )
 }
 }
 NTSTATUS PptDetectPortType(PDEVICE_EXTENSION Extension ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS Status ;
   UNICODE_STRING ParportPath ;
   RTL_QUERY_REGISTRY_TABLE RegTable[2] ;
@@ -6520,7 +6520,7 @@ NTSTATUS PptPnpAddDevice(PDRIVER_OBJECT pDriverObject , PDEVICE_OBJECT pPhysical
 }
 }
 NTSTATUS PptDispatchPnp(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS status ;
   PIO_STACK_LOCATION irpStack ;
   UCHAR minorFunction ;
@@ -9159,7 +9159,7 @@ NTSTATUS PptInitializeDeviceExtension(PDRIVER_OBJECT DriverObject , PDEVICE_OBJE
 NTSTATUS PptGetPortNumberFromLptName(PWSTR PortName , PULONG PortNumber ) 
 { NTSTATUS status ;
   UNICODE_STRING str ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
@@ -9597,7 +9597,7 @@ int main(void)
   NTSTATUS status ;
   int we_should_unload ;
   IRP irp ;
-  int __BLAST_NONDET ;
+  int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int irp_choice ;
   DEVICE_OBJECT devobj ;
 
@@ -9794,7 +9794,7 @@ int main(void)
 }
 char _SLAM_alloc_dummy  ;
 char *malloc(int i ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
@@ -9883,7 +9883,7 @@ PLIST_ENTRY ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead ,
                                                    PIRP Irp ) ;
 PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer ,
                    BOOLEAN ChargeQuota , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -9910,7 +9910,7 @@ PMDL IoAllocateMdl(PVOID VirtualAddress , ULONG Length , BOOLEAN SecondaryBuffer
   PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice ,
                                                                            PDEVICE_OBJECT TargetDevice ) ;
 PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE_OBJECT TargetDevice ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -9939,7 +9939,7 @@ PDEVICE_OBJECT IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice , PDEVICE
 PIRP IoBuildAsynchronousFsdRequest(ULONG MajorFunction , PDEVICE_OBJECT DeviceObject ,
                                    PVOID Buffer , ULONG Length , PLARGE_INTEGER StartingOffset ,
                                    PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -9977,7 +9977,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
                                    PVOID InputBuffer , ULONG InputBufferLength , PVOID OutputBuffer ,
                                    ULONG OutputBufferLength , BOOLEAN InternalDeviceIoControl ,
                                    PKEVENT Event , PIO_STATUS_BLOCK IoStatusBlock ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10010,7 +10010,7 @@ PIRP IoBuildDeviceIoControlRequest(ULONG IoControlCode , PDEVICE_OBJECT DeviceOb
 NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize ,
                         PUNICODE_STRING DeviceName , ULONG DeviceType , ULONG DeviceCharacteristics ,
                         BOOLEAN Exclusive , PDEVICE_OBJECT *DeviceObject ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10038,7 +10038,7 @@ NTSTATUS IoCreateDevice(PDRIVER_OBJECT DriverObject , ULONG DeviceExtensionSize
   NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName ,
                                                               PUNICODE_STRING DeviceName ) ;
 NTSTATUS IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName , PUNICODE_STRING DeviceName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10068,7 +10068,7 @@ void IoDeleteDevice(PDEVICE_OBJECT DeviceObject )
 }
   NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) ;
 NTSTATUS IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10155,7 +10155,7 @@ NTSTATUS IoQueryDeviceDescription(PINTERFACE_TYPE BusType , PULONG BusNumber , P
                                                                                        ULONG PeripheralNumber ,
                                                                                        PKEY_VALUE_FULL_INFORMATION *PeripheralInformation ) ,
                                   PVOID Context ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10183,7 +10183,7 @@ NTSTATUS IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject ,
                                                                    GUID const   *InterfaceClassGuid ,
                                                                    PUNICODE_STRING ReferenceString ,
                                                                    PUNICODE_STRING SymbolicLinkName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10214,7 +10214,7 @@ void IoReleaseCancelSpinLock(KIRQL Irql )
   NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName ,
                                                                    BOOLEAN Enable ) ;
 NTSTATUS IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName , BOOLEAN Enable ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10260,7 +10260,7 @@ void stubMoreProcessingRequired(void)
                                                                                         PIRP Irp ) ;
 NTSTATUS IofCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                         PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   NTSTATUS returnVal2 ;
   int compRetStatus ;
   PVOID lcontext ;
@@ -10372,7 +10372,7 @@ KIRQL KeAcquireSpinLockRaiseToDpc(PKSPIN_LOCK SpinLock )
                                                                 BOOLEAN Alertable ,
                                                                 PLARGE_INTEGER Interval ) ;
 NTSTATUS KeDelayExecutionThread(KPROCESSOR_MODE WaitMode , BOOLEAN Alertable , PLARGE_INTEGER Interval ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10453,7 +10453,7 @@ LONG KeSetEvent(PRKEVENT Event , KPRIORITY Increment , BOOLEAN Wait )
                                                                PLARGE_INTEGER Timeout ) ;
 NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESSOR_MODE WaitMode ,
                                BOOLEAN Alertable , PLARGE_INTEGER Timeout ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (s == MPR3) {
@@ -10498,7 +10498,7 @@ NTSTATUS KeWaitForSingleObject(PVOID Object , KWAIT_REASON WaitReason , KPROCESS
   PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes ,
                                                                  PHYSICAL_ADDRESS HighestAcceptableAddress ) ;
 PVOID MmAllocateContiguousMemory(SIZE_T NumberOfBytes , PHYSICAL_ADDRESS HighestAcceptableAddress ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   char *tmp ;
 
   {
@@ -10579,7 +10579,7 @@ void MmUnlockPages(PMDL MemoryDescriptorList )
                                                                    POBJECT_HANDLE_INFORMATION HandleInformation ) ;
 NTSTATUS ObReferenceObjectByHandle(HANDLE Handle , ACCESS_MASK DesiredAccess , POBJECT_TYPE ObjectType ,
                                    KPROCESSOR_MODE AccessMode , PVOID *Object , POBJECT_HANDLE_INFORMATION HandleInformation ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10610,7 +10610,7 @@ void ObfDereferenceObject(PVOID Object )
   NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject ,
                                                       PIRP Irp ) ;
 NTSTATUS PoCallDriver(PDEVICE_OBJECT DeviceObject , PIRP Irp ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
   int compRetStatus ;
   NTSTATUS returnVal ;
   PVOID lcontext ;
@@ -10712,7 +10712,7 @@ void PoStartNextPowerIrp(PIRP Irp )
 NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJECT_ATTRIBUTES ObjectAttributes ,
                               HANDLE ProcessHandle , PCLIENT_ID ClientId , void (*StartRoutine)(PVOID StartContext ) ,
                               PVOID StartContext ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10734,7 +10734,7 @@ NTSTATUS PsCreateSystemThread(PHANDLE ThreadHandle , ULONG DesiredAccess , POBJE
 }
   NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) ;
 NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10760,7 +10760,7 @@ NTSTATUS PsTerminateSystemThread(NTSTATUS ExitStatus )
 NTSTATUS RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString ,
                                                                       PANSI_STRING SourceString ,
                                                                       BOOLEAN AllocateDestinationString ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10806,7 +10806,7 @@ void RtlCopyUnicodeString(PUNICODE_STRING DestinationString ,
                                                                                                 PCWSTR ValueName ) ;
 NTSTATUS RtlDeleteRegistryValue(ULONG RelativeTo ,
                                                                 PCWSTR Path , PCWSTR ValueName ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10861,7 +10861,7 @@ void RtlInitUnicodeString(PUNICODE_STRING DestinationString ,
 NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
                                                                 PCWSTR Path , PRTL_QUERY_REGISTRY_TABLE QueryTable ,
                                                                 PVOID Context , PVOID Environment ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10883,7 +10883,7 @@ NTSTATUS RtlQueryRegistryValues(ULONG RelativeTo ,
 }
   NTSTATUS ZwClose(HANDLE Handle ) ;
 NTSTATUS ZwClose(HANDLE Handle ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10905,7 +10905,7 @@ NTSTATUS ZwClose(HANDLE Handle )
 }
 NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObject ,
                           PIRP Irp , PSYSCTL_IRP_DISPOSITION IrpDisposition ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET == 0) {
@@ -10933,7 +10933,7 @@ NTSTATUS WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo , PDEVICE_OBJECT DeviceObje
 NTSTATUS IoAcquireRemoveLockEx(PIO_REMOVE_LOCK RemoveLock ,
                                                                PVOID Tag , PCSTR File ,
                                                                ULONG Line , ULONG RemlockSize ) 
-{ int __BLAST_NONDET ;
+{ int __BLAST_NONDET = __VERIFIER_nondet_int() ;
 
   {
   if (__BLAST_NONDET) {
-- 
1.7.12

